//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/sneakyanimeow/RiderProjects/AntlrTests/NekoScript/NekoScript.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrTests.NekoScript {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="NekoScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface INekoScriptListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="NekoScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] NekoScriptParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NekoScriptParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] NekoScriptParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NekoScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] NekoScriptParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NekoScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] NekoScriptParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NekoScriptParser.assign_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_statement([NotNull] NekoScriptParser.Assign_statementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NekoScriptParser.assign_statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_statement([NotNull] NekoScriptParser.Assign_statementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NekoScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] NekoScriptParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NekoScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] NekoScriptParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="NekoScriptParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression_list([NotNull] NekoScriptParser.Expression_listContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="NekoScriptParser.expression_list"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression_list([NotNull] NekoScriptParser.Expression_listContext context);
}
} // namespace AntlrTests.NekoScript
