//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/meow/RiderProjects/AntlrTests/NekoScript\Seleneko.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrTests.NekoScript {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="SelenekoParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.CLSCompliant(false)]
public interface ISelenekoVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.chunk"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitChunk([NotNull] SelenekoParser.ChunkContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] SelenekoParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.stat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStat([NotNull] SelenekoParser.StatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.native_call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNative_call([NotNull] SelenekoParser.Native_callContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.laststat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLaststat([NotNull] SelenekoParser.LaststatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLabel([NotNull] SelenekoParser.LabelContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.funcname"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncname([NotNull] SelenekoParser.FuncnameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.varlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarlist([NotNull] SelenekoParser.VarlistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.namelist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamelist([NotNull] SelenekoParser.NamelistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.explist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExplist([NotNull] SelenekoParser.ExplistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExp([NotNull] SelenekoParser.ExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.prefixexp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixexp([NotNull] SelenekoParser.PrefixexpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.functioncall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctioncall([NotNull] SelenekoParser.FunctioncallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.varOrExp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarOrExp([NotNull] SelenekoParser.VarOrExpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.var"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVar([NotNull] SelenekoParser.VarContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.varSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarSuffix([NotNull] SelenekoParser.VarSuffixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.nameAndArgs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNameAndArgs([NotNull] SelenekoParser.NameAndArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.args"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgs([NotNull] SelenekoParser.ArgsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.functiondef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctiondef([NotNull] SelenekoParser.FunctiondefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.funcbody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFuncbody([NotNull] SelenekoParser.FuncbodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.parlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParlist([NotNull] SelenekoParser.ParlistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.tableconstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableconstructor([NotNull] SelenekoParser.TableconstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.fieldlist"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldlist([NotNull] SelenekoParser.FieldlistContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] SelenekoParser.FieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.fieldsep"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldsep([NotNull] SelenekoParser.FieldsepContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorOr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorOr([NotNull] SelenekoParser.OperatorOrContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorAnd"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorAnd([NotNull] SelenekoParser.OperatorAndContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorComparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorComparison([NotNull] SelenekoParser.OperatorComparisonContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorStrcat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorStrcat([NotNull] SelenekoParser.OperatorStrcatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorAddSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorAddSub([NotNull] SelenekoParser.OperatorAddSubContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorMulDivMod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorMulDivMod([NotNull] SelenekoParser.OperatorMulDivModContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorBitwise"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorBitwise([NotNull] SelenekoParser.OperatorBitwiseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorUnary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorUnary([NotNull] SelenekoParser.OperatorUnaryContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.operatorPower"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOperatorPower([NotNull] SelenekoParser.OperatorPowerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNumber([NotNull] SelenekoParser.NumberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="SelenekoParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] SelenekoParser.StringContext context);
}
} // namespace AntlrTests.NekoScript
