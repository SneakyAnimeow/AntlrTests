//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.12.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/sneakyanimeow/RiderProjects/AntlrTests/NekoScript/Seleneko.g4 by ANTLR 4.12.0

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace AntlrTests.NekoScript {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ISelenekoListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.12.0")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class SelenekoBaseListener : ISelenekoListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.chunk"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChunk([NotNull] SelenekoParser.ChunkContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.chunk"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChunk([NotNull] SelenekoParser.ChunkContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] SelenekoParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] SelenekoParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStat([NotNull] SelenekoParser.StatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.stat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStat([NotNull] SelenekoParser.StatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.native_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNative_call([NotNull] SelenekoParser.Native_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.native_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNative_call([NotNull] SelenekoParser.Native_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.attnamelist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttnamelist([NotNull] SelenekoParser.AttnamelistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.attnamelist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttnamelist([NotNull] SelenekoParser.AttnamelistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.attrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttrib([NotNull] SelenekoParser.AttribContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.attrib"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttrib([NotNull] SelenekoParser.AttribContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.laststat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLaststat([NotNull] SelenekoParser.LaststatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.laststat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLaststat([NotNull] SelenekoParser.LaststatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLabel([NotNull] SelenekoParser.LabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.label"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLabel([NotNull] SelenekoParser.LabelContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.funcname"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncname([NotNull] SelenekoParser.FuncnameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.funcname"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncname([NotNull] SelenekoParser.FuncnameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.varlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarlist([NotNull] SelenekoParser.VarlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.varlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarlist([NotNull] SelenekoParser.VarlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.namelist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamelist([NotNull] SelenekoParser.NamelistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.namelist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamelist([NotNull] SelenekoParser.NamelistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.explist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplist([NotNull] SelenekoParser.ExplistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.explist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplist([NotNull] SelenekoParser.ExplistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExp([NotNull] SelenekoParser.ExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.exp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExp([NotNull] SelenekoParser.ExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.prefixexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefixexp([NotNull] SelenekoParser.PrefixexpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.prefixexp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefixexp([NotNull] SelenekoParser.PrefixexpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.functioncall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctioncall([NotNull] SelenekoParser.FunctioncallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.functioncall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctioncall([NotNull] SelenekoParser.FunctioncallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.varOrExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarOrExp([NotNull] SelenekoParser.VarOrExpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.varOrExp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarOrExp([NotNull] SelenekoParser.VarOrExpContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar([NotNull] SelenekoParser.VarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar([NotNull] SelenekoParser.VarContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.varSuffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarSuffix([NotNull] SelenekoParser.VarSuffixContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.varSuffix"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarSuffix([NotNull] SelenekoParser.VarSuffixContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.nameAndArgs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameAndArgs([NotNull] SelenekoParser.NameAndArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.nameAndArgs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameAndArgs([NotNull] SelenekoParser.NameAndArgsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgs([NotNull] SelenekoParser.ArgsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.args"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgs([NotNull] SelenekoParser.ArgsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.functiondef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctiondef([NotNull] SelenekoParser.FunctiondefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.functiondef"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctiondef([NotNull] SelenekoParser.FunctiondefContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.funcbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFuncbody([NotNull] SelenekoParser.FuncbodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.funcbody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFuncbody([NotNull] SelenekoParser.FuncbodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.parlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParlist([NotNull] SelenekoParser.ParlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.parlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParlist([NotNull] SelenekoParser.ParlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.tableconstructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTableconstructor([NotNull] SelenekoParser.TableconstructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.tableconstructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTableconstructor([NotNull] SelenekoParser.TableconstructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.fieldlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldlist([NotNull] SelenekoParser.FieldlistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.fieldlist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldlist([NotNull] SelenekoParser.FieldlistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterField([NotNull] SelenekoParser.FieldContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.field"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitField([NotNull] SelenekoParser.FieldContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.fieldsep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldsep([NotNull] SelenekoParser.FieldsepContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.fieldsep"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldsep([NotNull] SelenekoParser.FieldsepContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorOr([NotNull] SelenekoParser.OperatorOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorOr([NotNull] SelenekoParser.OperatorOrContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorAnd([NotNull] SelenekoParser.OperatorAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorAnd([NotNull] SelenekoParser.OperatorAndContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorComparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorComparison([NotNull] SelenekoParser.OperatorComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorComparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorComparison([NotNull] SelenekoParser.OperatorComparisonContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorStrcat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorStrcat([NotNull] SelenekoParser.OperatorStrcatContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorStrcat"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorStrcat([NotNull] SelenekoParser.OperatorStrcatContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorAddSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorAddSub([NotNull] SelenekoParser.OperatorAddSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorAddSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorAddSub([NotNull] SelenekoParser.OperatorAddSubContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorMulDivMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorMulDivMod([NotNull] SelenekoParser.OperatorMulDivModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorMulDivMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorMulDivMod([NotNull] SelenekoParser.OperatorMulDivModContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorBitwise"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorBitwise([NotNull] SelenekoParser.OperatorBitwiseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorBitwise"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorBitwise([NotNull] SelenekoParser.OperatorBitwiseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorUnary([NotNull] SelenekoParser.OperatorUnaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorUnary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorUnary([NotNull] SelenekoParser.OperatorUnaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.operatorPower"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperatorPower([NotNull] SelenekoParser.OperatorPowerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.operatorPower"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperatorPower([NotNull] SelenekoParser.OperatorPowerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] SelenekoParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] SelenekoParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="SelenekoParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterString([NotNull] SelenekoParser.StringContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="SelenekoParser.string"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitString([NotNull] SelenekoParser.StringContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace AntlrTests.NekoScript
